{"version":3,"file":"index.js","sources":["../utils/showAlert.js","../utils/handleErrors.js","../importModules.js","../utils/httpRequestsHelper.js","../modules/handleFlashMessages.js","../index.js"],"sourcesContent":["/// Manages alerts\r\n\r\n/**\r\n * Hide tiomeout on demand\r\n * @param {TimerHandler} timer Set timeout handler\r\n * @returns {TimerHandler} Clear timeout\r\n */\r\nconst hideAlert = timer => {\r\n  const alert = document.querySelector('.alert');\r\n\r\n  if (!alert) return;\r\n\r\n  if (timer) clearTimeout(timer);\r\n\r\n  alert.classList.add(`alert--hide`);\r\n\r\n  return setTimeout(() => {\r\n    alert.parentElement.removeChild(alert);\r\n  }, 100 * 6);\r\n};\r\n\r\n/**\r\n * Handles closing of the button\r\n * @param {'left' | 'center' | 'right'} direction Where to position the close button relative to the alert box\r\n * @returns {TimerHandler} Clear timeout\r\n */\r\nconst closeAlert = (direction, timer) => {\r\n  const closeBtnEl = document.querySelector('.alert__close');\r\n\r\n  if (!closeBtnEl) return;\r\n\r\n  const alertBoxEl = closeBtnEl.parentElement;\r\n\r\n  closeBtnEl.addEventListener('click', function (event) {\r\n    // remove any available timer\r\n    timer && clearTimeout(timer);\r\n\r\n    // Handle close\r\n    this.parentElement.classList.add(`alert--hide-${direction}`);\r\n\r\n    return setTimeout(() => {\r\n      alertBoxEl.parentElement.removeChild(alertBoxEl);\r\n    }, 100 * 6);\r\n  });\r\n};\r\n\r\n/**\r\n * Shows alert for a given duration\r\n *  @param {{removeAfter: 'shown' | 'timeExpires', viewStatus: 'viewed' | 'pending', message: string, action: string, messageType: 'info' | 'warning' | 'success' | 'error', displayPosition: 'center' | 'right' | 'left', alertDisplayDuration: number}} alert Collection of flash messages from the client browser\r\n *\r\n */\r\nconst showAlert = function (\r\n  alert = {\r\n    message: '',\r\n    action: '',\r\n    viewStatus: '',\r\n    removeAfter: '',\r\n    messageType: 'success',\r\n    displayPosition: 'center',\r\n    alertDisplayDuration: 7,\r\n  }\r\n) {\r\n  // Prep incoming alert\r\n  const defaultAlert = {\r\n    messageType: 'success',\r\n    displayPosition: 'center',\r\n    alertDisplayDuration: 7,\r\n  };\r\n\r\n  const {\r\n    message,\r\n    action,\r\n    messageType,\r\n    displayPosition,\r\n    alertDisplayDuration,\r\n    viewStatus,\r\n    removeAfter,\r\n  } = {\r\n    ...defaultAlert,\r\n    ...alert,\r\n  };\r\n\r\n  /// Server messages filter ->\r\n  //Prevent showing alert more than once on the client side for server side messages marked as removerAfter timeExpires and have already been shown\r\n  if (\r\n    viewStatus &&\r\n    removeAfter &&\r\n    viewStatus === 'viewed' &&\r\n    removeAfter === 'timeExpires' &&\r\n    !location.pathname.startsWith('/sys-admin')\r\n  )\r\n    return;\r\n\r\n  /// hide alert first\r\n  // TODO: Currently the showAlert is not able to show multiple alerts. Should implement it to handle multiple alerts and notification of number of the notifications in teh queue\r\n  const hideTimer = hideAlert();\r\n\r\n  /// Get the alert housing element\r\n  const headerEl = document.querySelector('.header');\r\n\r\n  /// Generate icon mockup\r\n  const iconMarkup = type => `<i class=\"alert__icon alert__icon--${type}\"></i>`;\r\n\r\n  const showPosition = `alert--${displayPosition}`;\r\n\r\n  const showTitle = action\r\n    ? `<h2 class=\"alert__title alert__title--${displayPosition}\">${action}</h2>`\r\n    : '';\r\n\r\n  /// return a constructed alert depending with the type\r\n  const alertMarkup = `<div class=\"alert ${\r\n    messageType ? 'alert__' + messageType : ''\r\n  } ${showPosition}\"> \r\n        <button class=\"alert__close alert__close--${displayPosition}\">&times;</button>\r\n        ${showTitle}\r\n        <p class=\"alert__content\">\r\n           ${iconMarkup(messageType)}\r\n           ${message}\r\n        </p>\r\n    </div>\r\n    `;\r\n\r\n  /// Add markup to the DOM\r\n  headerEl.insertAdjacentHTML('beforeend', alertMarkup);\r\n\r\n  /// Auto remove alert\r\n  const autoTimer = setTimeout(() => {\r\n    hideAlert(hideTimer);\r\n  }, 1000 * alertDisplayDuration);\r\n\r\n  //   /// Close timeout before hidealert\r\n  closeAlert(displayPosition, autoTimer);\r\n};\r\n\r\nexport default showAlert;\r\n","/**\r\n * All related functions for wrapping code\r\n * - imports, trycatch, etc.\r\n */\r\n\r\nimport showAlert from './showAlert.js';\r\n\r\n/**\r\n * Helper method to abstract error handling\r\n * @param {Error} error Error object\r\n * @param {String} message Custom message passed on implementing the wrapper\r\n */\r\nconst handleErrors = (error, message) => {\r\n  // Handle notification\r\n  const getMessage = message ? message : error.message;\r\n  showAlert({\r\n    message: getMessage,\r\n    messageType: 'error',\r\n    action: 'Error message',\r\n    displayPosition: 'right',\r\n  });\r\n\r\n  // FIXME Remove this console log\r\n  console.log(error);\r\n};\r\n\r\n/**\r\n * Abstracts error handler that abstract try catch and creates a central location for error handling in the application\r\n *\r\n * @param {Function} cb Internal details of the calling function\r\n * @param {{ message: string, hasEvent: boolean, allowErrorThrow: boolean, }} configOptions Configure -> Error message; allowErrorThrow Pass error handling to the requesting function.\r\n * @returns {Error | string | void}\r\n **/\r\nexport const errorWrapper = function (\r\n  cb = () => {},\r\n  confingOptions = {\r\n    message: '',\r\n    allowErrorThrow: false,\r\n  }\r\n) {\r\n  // Initialize configs with defaults\r\n  const { message, allowErrorThrow } = {\r\n    message: '',\r\n    allowErrorThrow: false,\r\n    ...(confingOptions ? confingOptions : {}),\r\n  };\r\n  /// Abastract try catch wrapping\r\n  try {\r\n    return cb();\r\n  } catch (error) {\r\n    // Throw error if it is allowed\r\n    if (allowErrorThrow) {\r\n      throw error;\r\n    }\r\n\r\n    // Show message is throw error is not configure to true\r\n    handleErrors(error, message);\r\n  }\r\n};\r\n\r\n/**\r\n * Abstracts async error handler that abstract try catch and creates a central location for error handling in the application\r\n *\r\n * @param {Function} cb Internal details of the calling function\r\n * @param {{ message: string, hasEvent: boolean, allowErrorThrow: boolean, }} configOptions Configure -> Error message; allowErrorThrow Pass error handling to the requesting function.\r\n * @returns {Error | string | void}\r\n **/\r\nexport const asyncErrorWrapper = async function (\r\n  cb = () => {},\r\n  confingOptions = {\r\n    message: '',\r\n    allowErrorThrow: false,\r\n  }\r\n) {\r\n  // Initialize configs with defaults\r\n  const { message, allowErrorThrow } = {\r\n    message: '',\r\n    allowErrorThrow: false,\r\n    ...(confingOptions ? confingOptions : {}),\r\n  };\r\n  /// Abastract try catch wrapping\r\n  try {\r\n    return await cb();\r\n  } catch (error) {\r\n    // Throw error if it is allowed\r\n    if (allowErrorThrow) {\r\n      console.log('Error thrown ðŸš©ðŸš©ðŸš©ðŸš©\\n');\r\n      throw error;\r\n    }\r\n\r\n    console.log(`Error received from: ${location.pathname}\\n`);\r\n\r\n    // Show message is throw error is not configure to true\r\n    handleErrors(error, message);\r\n  }\r\n};\r\n","/// Handles import of modules\r\n\r\nimport { asyncErrorWrapper, errorWrapper } from './utils/handleErrors.js';\r\n\r\n/**\r\n * Import Modules\r\n */\r\nconst getLoginModule = () =>\r\n  import(/*webpackChunkName: \"loginModule\"*/ './modules/login.js');\r\n\r\nconst getLocationsMapModule = () =>\r\n  import(\r\n    /* webpackChunkName: \"locationMapModule\" */\r\n    './modules/locationsMap.js'\r\n  );\r\n\r\n/// Import logout on demand\r\nconst getLogoutModule = () =>\r\n  import(/* wepackChunkName: \"logoutModule\" */ './modules/logout.js');\r\n\r\n/**\r\n * Handle user login login with dynamic import. Import feature on demand\r\n * @param {Event} event from event listener\r\n */\r\nexport const loginFormSubmitHandler = async function (event = Event) {\r\n  return asyncErrorWrapper(\r\n    async () => {\r\n      // Prevent form submit\r\n      event.preventDefault();\r\n\r\n      // try getting the login form\r\n      const { default: handleLogin } = await getLoginModule();\r\n\r\n      // Login user\r\n      handleLogin(event.target);\r\n    },\r\n    {\r\n      message: 'Error submitting form',\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * Handles Map import\r\n */\r\nexport const loadMapHandler = function (mapEl) {\r\n  // Error wrapper\r\n  return asyncErrorWrapper(\r\n    async () => {\r\n      const { default: showLocationMap } = await getLocationsMapModule();\r\n\r\n      //Render Map\r\n      showLocationMap(mapEl.dataset.locations, mapEl.dataset.mapboxKey);\r\n    },\r\n    { message: 'Could not load the MAP' }\r\n  );\r\n};\r\n\r\n/**\r\n * Handles logout user\r\n */\r\nexport const logoutHandler = async function () {\r\n  // Error wrapper\r\n  return asyncErrorWrapper(\r\n    async () => {\r\n      const { default: handleLogout } = await getLogoutModule();\r\n      handleLogout();\r\n    },\r\n    { allowErrorThrow: true }\r\n  );\r\n};\r\n","/// This file implements a helper function for server requests handling -> HTTP Requests\r\n\r\nimport { asyncErrorWrapper } from './handleErrors.js';\r\n\r\n/**\r\n * Handles client side http request error message if there is a successful response but has an error Message\r\n * @param {Response} response server response object\r\n * @param {string} errorMessage A message to throw if server does not provide one\r\n * @returns {Promise<{status: 'string', data: {[prop: string]?: {} | string, errorMessage?: 'string', message?: 'string'}}>} server object with successful message\r\n */\r\nexport const handleHttpErrors = async (response, errorMessage) => {\r\n  const res = await response.json();\r\n\r\n  /// Check for response errors\r\n  if (res.status !== 'success')\r\n    throw new Error(\r\n      res.data.errorMessage ? res.data.errorMessage : errorMessage\r\n    );\r\n\r\n  /// Successful request -> send response to backend\r\n  return res;\r\n};\r\n\r\n/**\r\n * Universal http request handler\r\n * @param {string} requestUrl Request url to the server handler\r\n * @param {{sendPlainResponse: boolean, submitData : T | any, requestMethod: string, dataType: 'normal' | 'attachement', allowRedirect: boolean, redirectUrl: string}} configOptions\r\n * @returns { Promise<T> | Promise<Error>} An error object or a success object\r\n */\r\nconst httpRequestHelper = async function (\r\n  requestUrl,\r\n  configOptions = {\r\n    submitData: {},\r\n    requestMethod: '',\r\n    dataType: 'normal',\r\n    allowRedirect: false,\r\n    redirectUrl: '',\r\n    sendPlainResponse: false,\r\n  }\r\n) {\r\n  /// Wrap wit error wrapper\r\n  return asyncErrorWrapper(\r\n    async () => {\r\n      // set default configs\r\n      const defaultConfigs = {\r\n        dataType: 'normal',\r\n        allowRedirect: false,\r\n        redirectUrl: '',\r\n        sendPlainResponse: false,\r\n      };\r\n\r\n      // Intialize configs\r\n      const {\r\n        requestMethod,\r\n        submitData,\r\n        dataType,\r\n        allowRedirect,\r\n        redirectUrl,\r\n        sendPlainResponse,\r\n      } = {\r\n        ...defaultConfigs,\r\n        ...configOptions,\r\n      };\r\n\r\n      // Intialize request options\r\n      let requestOptions = {\r\n        credentials: 'same-origin',\r\n        referrerPolicy: 'no-referrer',\r\n        redirect: 'follow',\r\n      };\r\n\r\n      /// Handle currently supported http request method method\r\n      switch (requestMethod) {\r\n        //// Handling POST|PATCH|PUT requests\r\n        case 'POST':\r\n        case 'PATCH':\r\n        case 'PUT':\r\n          /// DataType -> normal | attachment\r\n\r\n          /// Normal request\r\n          if (dataType === 'normal') {\r\n            requestOptions = {\r\n              method: requestMethod,\r\n              body: JSON.stringify(submitData),\r\n              headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n              },\r\n              ...requestOptions,\r\n            };\r\n          }\r\n\r\n          /// Request with attachment\r\n          if (dataType === 'attachment') {\r\n            requestOptions = {\r\n              method: requestMethod,\r\n              body: submitData,\r\n              ...requestOptions,\r\n            };\r\n          }\r\n          break;\r\n\r\n        //// HANDLE GET REQUESTS\r\n        case 'GET':\r\n          requestOptions = {\r\n            method: 'GET',\r\n            ...requestOptions,\r\n          };\r\n          break;\r\n\r\n        default:\r\n          throw new Error('Method request currently unsupported');\r\n      }\r\n\r\n      /// Send fetch\r\n      const response = await fetch(requestUrl, requestOptions);\r\n\r\n      // Handle errors\r\n      if (!response.ok && !sendPlainResponse)\r\n        throw new Error('Request unsuccessful ðŸ’¥ðŸ’¥ðŸ’¥');\r\n\r\n      /// Convert request to readable string\r\n      if (!sendPlainResponse) {\r\n        const res = await response.json();\r\n\r\n        /// Check for response errors\r\n        if (res.status !== 'success') throw new Error(res);\r\n\r\n        /// Successful request -> send response to backend\r\n        if (!allowRedirect) return res;\r\n      }\r\n\r\n      if (!allowRedirect && sendPlainResponse) return response;\r\n\r\n      // Redirect to /sys-admin\r\n      // TODO: Redirect /sys-admin\r\n      if (allowRedirect) {\r\n        location.replace(redirectUrl);\r\n      }\r\n    },\r\n    { allowErrorThrow: true }\r\n  );\r\n};\r\n\r\n/// Export feature\r\nexport default httpRequestHelper;\r\n","import { asyncErrorWrapper } from '../utils/handleErrors.js';\r\nimport httpRequestHelper from '../utils/httpRequestsHelper.js';\r\nimport showAlert from '../utils/showAlert.js';\r\n\r\n/**\r\n * Reusable function using Fetch API, responsible for sending viwed flash messages to the server\r\n *  - Viwed flash messages can be either, those marked as showAfter shown or viewStatus: viewed\r\n *\r\n * @param {{viewStatus: 'viewed' | 'pending', showOnPage: string, message: string,action: string,removeAfter: 'shown' | 'timeExpires', messageType: 'info' | 'warning' | 'success' | 'error', expiresIn: Date,createdAt: Date, }} flashMessage Flash message object\r\n * @param {boolean} messageViewed Marks view status as viewed or pending\r\n * @returns {Promise<{status: number, ok: boolean, body: ReadableStream, url: string}>} Response object from server\r\n */\r\nconst sendViewedFlashMessage = (flashMessage, messageViewed = false) => {\r\n  let submitData = flashMessage;\r\n\r\n  // mark message as viewed\r\n  if (messageViewed) {\r\n    submitData = {\r\n      ...submitData,\r\n      viewStatus: 'viewed',\r\n    };\r\n  }\r\n\r\n  // Configure request\r\n  const requestUrl = '/viewed-flash-message';\r\n  const configOptions = {\r\n    submitData,\r\n    requestMethod: 'POST',\r\n    dataType: 'normal',\r\n    allowRedirect: false,\r\n    sendPlainResponse: true,\r\n  };\r\n\r\n  const res = httpRequestHelper(requestUrl, configOptions);\r\n  return res;\r\n};\r\n\r\n/**\r\n * Responsible showing notifications from the server and removing shown notification\r\n * @param {{viewStatus: 'viewed' | 'pending', showOnPage: string, message: string,action: string,removeAfter: 'shown' | 'timeExpires', messageType: 'info' | 'warning' | 'success' | 'error', expiresIn: Date,createdAt: Date, }} flashMessage - Flash message object\r\n * @param {string} userRole current logged in user role. For only showing admins if there is error\r\n * @returns {never} Never returns anything\r\n */\r\nconst showFlashMessageAndRemoveShown = async (flashMessage, userRole) =>\r\n  asyncErrorWrapper(\r\n    async () => {\r\n      // Only show notifications for the current page if removeAfte is timeExpires\r\n      if (flashMessage.showOnPage !== location.pathname) return;\r\n\r\n      // TODO: Handle admin messages differently\r\n      // Show all pending messages\r\n      if (flashMessage.showOnPage.startsWith('/sys-admin')) {\r\n        /// Handle this message differently\r\n      }\r\n\r\n      // Show incoming notification before removing it\r\n      showAlert({\r\n        ...flashMessage,\r\n        displayPosition: 'right',\r\n      });\r\n\r\n      // Do not allow viewed flash messages marked timeExpires from being sent to the server\r\n      if (\r\n        flashMessage.removeAfter === 'timeExpires' &&\r\n        flashMessage.viewStatus === 'viewed'\r\n      )\r\n        return;\r\n\r\n      /// Send only for shown\r\n      const res = await sendViewedFlashMessage(flashMessage);\r\n\r\n      // Show notification if admin and response is not okay\r\n      if (userRole !== 'admin' || (res.ok && res.status === 200)) return;\r\n\r\n      showAlert({\r\n        message: `Error showing the notification: ${flashMessage.message}`,\r\n        displayPosition: 'right',\r\n        messageType: 'info',\r\n      });\r\n    },\r\n    { allowErrorThrow: true }\r\n  );\r\n\r\n/**\r\n * Handle showing and reseting of flash messages.\r\n *\r\n * Allows flash messages to remain for a while in the client if removeAfte timeExpires is set while those with removeAfter shown are removed immediately from the flash messages stored in the cookie\r\n * @param {[{viewStatus: 'viewed' | 'pending', showOnPage: string, message: string,action: string,removeAfter: 'shown' | 'timeExpires', messageType: 'info' | 'warning' | 'success' | 'error', expiresIn: Date,createdAt: Date, }]} flashMessagesObj Collecton of flash messages stored in the express request\r\n * @param {string} userRole current logged in user role. For only showing admins if there is error\r\n * @returns {void | }\r\n */\r\nconst handleFlashMessages = async (flashMessagesObj, userRole) => {\r\n  // Do not proceed is we do not have a flash message objec with messages\r\n  if (!flashMessagesObj) return;\r\n\r\n  const flashMessages = JSON.parse(flashMessagesObj);\r\n\r\n  // Flash message is set but has zero items in it, stop processing\r\n  if (flashMessages.length === 0) return;\r\n\r\n  /// Cycle flash message\r\n  if (flashMessages.length > 1) {\r\n    flashMessages.forEach(flashMessage => {\r\n      showFlashMessageAndRemoveShown(flashMessage, userRole);\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  /// Just a single flashMessage in the array\r\n  showFlashMessageAndRemoveShown(flashMessages[0], userRole);\r\n};\r\n\r\nexport default handleFlashMessages;\r\n","'use strict';\r\n// IMPORTS\r\n//import showLocationMap from './modules/locationsMap.js';\r\n\r\nimport * as module from './importModules.js';\r\nimport handleFlashMessages from './modules/handleFlashMessages.js';\r\n\r\n/// GET DOM ELEMENTS\r\n/**\r\n * Map Element\r\n */\r\nconst mapEl = document.getElementById('map');\r\n\r\n/**\r\n * Login Form\r\n */\r\nconst loginFormEl = document.querySelector('.form__login');\r\n\r\n/**\r\n * Logout button\r\n */\r\nconst logoutEl = document.getElementById('logout');\r\n\r\n/**\r\n * Get base body\r\n */\r\nconst bodyEl = document.body;\r\n\r\n/// COFIGURE DIFFERENT SCRIPTS\r\n/**\r\n * Get Map If it is set\r\n */\r\nif (mapEl) module.loadMapHandler(mapEl);\r\n\r\n/**\r\n * handle login form\r\n */\r\nif (loginFormEl) {\r\n  // Listen to teh submit event\r\n  loginFormEl.addEventListener('submit', module.loginFormSubmitHandler);\r\n}\r\n\r\n/**\r\n * Handle user logout\r\n */\r\nif (logoutEl) logoutEl.addEventListener('click', module.logoutHandler);\r\n\r\n/**\r\n * Handle server messages\r\n */\r\nif (bodyEl) {\r\n  const flashMessagesObj = bodyEl.dataset.flashMessages;\r\n  const userRole = bodyEl.dataset.userRole ? bodyEl.dataset.userRole : '';\r\n\r\n  handleFlashMessages(flashMessagesObj, userRole);\r\n}\r\n\r\n/**\r\n * Handle admin errors\r\n */\r\nif (bodyEl) {\r\n  let pageError = bodyEl.dataset.pageError;\r\n\r\n  if (pageError) {\r\n    pageError = JSON.parse(pageError);\r\n\r\n    /**\r\n     *  A universal functions that adds a template to the DOM\r\n     * @param {string} rootId Host ID, where to position the templates\r\n     * @param {string} templateId the template Id in the html waiting for position\r\n     * @param {'beforebegin' | 'beforeend' | 'afterbegin' | 'afterend'} displayPosition HTML insert position in the root element\r\n     * @returns {HTMLElement} HTML DOM elment inserted in the DOM\r\n     */\r\n    const addTemplateUIElement = (rootId, templateId, displayPosition) => {\r\n      // get the\r\n      const overlayRoot = document.getElementById(rootId);\r\n      const templateEl = document.getElementById(templateId);\r\n      let domEl = '';\r\n\r\n      /// Clone\r\n      domEl = document.importNode(templateEl.content, true).firstElementChild;\r\n\r\n      /// Handle display\r\n      overlayRoot.insertAdjacentElement(displayPosition, domEl);\r\n\r\n      return domEl;\r\n    };\r\n\r\n    /**\r\n     * Adds a styling context to the current selected dom element\r\n     * @param {HTMLElement} domEl The html element that will get the current context style depending with the status code i.e. modal or overlay\r\n     * @param {number} statusCode  status code of the error from the server\r\n     * @param {string} type The element, i.e. modal or overlay\r\n     */\r\n    const selectElementContext = (domEl, statusCode, type) => {\r\n      // Set default to none\r\n      let selectedStyle = '';\r\n\r\n      /// Warning messages\r\n      selectedStyle = `${statusCode}`.startsWith(4) && `${type}--warning`;\r\n\r\n      // info messages\r\n      if (!selectedStyle)\r\n        selectedStyle = `${statusCode}`.startsWith(3) && `${type}--info`;\r\n\r\n      // error messages\r\n      if (!selectedStyle)\r\n        selectedStyle = `${statusCode}`.startsWith(5) && `${type}--error`;\r\n\r\n      // Add element context\r\n      domEl.classList.add(selectedStyle);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {HTMLElement} triggerElement The selector element\r\n     */\r\n    const handleClosePopup = triggerElement => {\r\n      triggerElement.addEventListener('click', function (event) {\r\n        /// Handle close of the popup/modal if the close button is clicked\r\n        if (this.classList.contains('modal__btn-close')) {\r\n          this.parentElement.classList.add(`popup--hide`);\r\n\r\n          /// Remove element from the flow\r\n          setTimeout(() => {\r\n            this.parentElement.classList.add('popup--remove');\r\n          }, 400);\r\n\r\n          // Close the the backdrop\r\n        }\r\n\r\n        /// Handle close of the popup/modal if the overlay is clicked\r\n        if (this.classList.contains('backdrop'))\r\n          // Start closing the modal\r\n\r\n          // close the backdrop\r\n          setTimeout(() => {\r\n            this.classList.add('popup--remove');\r\n          }, 300);\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Handle showing overlay\r\n     * @param {{statusCode: number, stack: string, message: string}} errorObj An error object from the server\r\n     */\r\n    const showBackdrop = errorObj => {\r\n      // Do not show backdrop if no error object\r\n      if (!errorObj) return;\r\n\r\n      // Get err message content\r\n      const { statusCode } = errorObj;\r\n\r\n      // Render UI element to the DOM\r\n      let domEl = addTemplateUIElement('overlay', 'backdrop', 'beforeend');\r\n\r\n      /// Add backdrop context\r\n      selectElementContext(domEl, statusCode, 'backdrop');\r\n\r\n      /// Hide backdrop\r\n      handleClosePopup(domEl);\r\n    };\r\n\r\n    /**\r\n     * Handle showing modal\r\n     * @param {{statusCode: number, stack: string, message: string}} errorObj An error object from the server\r\n     */\r\n    const showModal = errorObj => {\r\n      // Do not show modal if no error object\r\n      if (!errorObj) return;\r\n\r\n      // Get err object message content\r\n      const { stack, statusCode, message } = errorObj;\r\n\r\n      // Render UI element to the DOM\r\n      let domEl = addTemplateUIElement('overlay', 'modal', 'afterbegin');\r\n\r\n      //let textNode = addTemplateUIElement;\r\n\r\n      /// Add content to the modal\r\n      const modalTitleEl = domEl.querySelector('.modal__title');\r\n      const modalStatusEl = domEl.querySelector('.modal__status-code');\r\n      const modalContentEl = domEl.querySelector('.modal__content');\r\n      const modalFooterEl = domEl.querySelector('.modal__footer .modal__text');\r\n      const modalCloseBtnEl = domEl.querySelector('.modal__btn-close');\r\n\r\n      /// Get the paragraph\r\n\r\n      /// Split stact trace string by new line\r\n      const colorStackLineNumbers = stack.split('\\n').map(str => {\r\n        return str.replace(\r\n          /\\d+:\\d+/g,\r\n          match => `<span class=\"modal__error-line-number\">${match}</span>`\r\n        );\r\n      });\r\n\r\n      const errorStackMsgs = colorStackLineNumbers\r\n        .map(msg => `<p class=\"modal__text\">${msg.trim()}</p>`)\r\n        .slice(1)\r\n        .join(' ');\r\n\r\n      /// Add error stack text\r\n      modalContentEl.innerHTML = errorStackMsgs;\r\n\r\n      /// Add header title message\r\n      modalTitleEl.innerHTML = colorStackLineNumbers.at(0);\r\n\r\n      /// Add status code\r\n      modalStatusEl.innerHTML = statusCode;\r\n\r\n      /// Show message to the footer\r\n      modalFooterEl.innerHTML = message;\r\n\r\n      //Add modal context\r\n      selectElementContext(domEl, statusCode, 'modal');\r\n\r\n      /// Handling modal close\r\n      handleClosePopup(modalCloseBtnEl);\r\n    };\r\n\r\n    /// Show UI templates\r\n    showModal(pageError);\r\n    showBackdrop(pageError);\r\n  }\r\n}\r\n"],"names":["module.loadMapHandler","module.loginFormSubmitHandler","module.logoutHandler"],"mappings":"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"}