{"version":3,"file":"userSignup.js","sources":["../modules/userSignup.js"],"sourcesContent":["// Imports\r\nimport { asyncErrorWrapper } from '../utils/handleErrors';\r\nimport httpRequestsHelper, {\r\n  handleHttpErrors,\r\n} from '../utils/httpRequestsHelper';\r\nimport redirectTo from '../utils/redirectsHelper';\r\n\r\n/**\r\n * Handles user signup\r\n * @param {HTMLFormElement} formEl Handle to the signup form\r\n * @returns {Promise<void>} Returns nothing\r\n */\r\nconst userSignup = function (formEl) {\r\n  // Error Error wrapper\r\n  return asyncErrorWrapper(\r\n    async () => {\r\n      /// Get form data\r\n      const formData = new FormData(formEl);\r\n\r\n      // Prep Fields to submit\r\n      const name = formData.get('name').trim();\r\n      const email = formData.get('email').trim();\r\n      const password = formData.get('password').trim();\r\n      const passwordConfirm = formData.get('passwordConfirm').trim();\r\n      const remember = formData.get('remember');\r\n\r\n      /// Do basic validations\r\n      // Required Validations\r\n      if (!name || !email || !password || !passwordConfirm)\r\n        throw new Error(\r\n          'Required fields empty, please ensure your name, email, password, and password fields are not empty!'\r\n        );\r\n\r\n      // Password match\r\n      if (password !== passwordConfirm)\r\n        throw new Error(\r\n          'Password do match, please ensure password and confirm password matches.'\r\n        );\r\n\r\n      /// Submit form\r\n      const url = '/api/v1/users/signup';\r\n      const submitData = {\r\n        name,\r\n        email,\r\n        password,\r\n        passwordConfirm,\r\n        ...(remember ? { remember } : {}),\r\n      };\r\n\r\n      // Send Http request\r\n      const response = await httpRequestsHelper(url, {\r\n        submitData,\r\n        dataType: 'normal',\r\n        requestMethod: 'POST',\r\n        sendPlainResponse: true,\r\n      });\r\n\r\n      // listen for errors\r\n      await handleHttpErrors(response, 'Signup failed');\r\n\r\n      // Is successful send user to the dashboard/welcome page\r\n      redirectTo('/sys-admin', {\r\n        redirectOption: 'disallowGoBack',\r\n      });\r\n    },\r\n    {},\r\n    {\r\n      displayPosition: 'center',\r\n      action: 'Signup Validation Failed!',\r\n      messageType: 'error',\r\n    }\r\n  );\r\n};\r\n\r\nexport default userSignup;\r\n"],"names":["httpRequestsHelper"],"mappings":";;;;;;;;;;;;;;;;;;AAYK,MAAC,aAAa,SAAU,QAAQ;AAEnC,SAAO,kBACL,YAAY;AAEV,UAAM,WAAW,IAAI,SAAS,MAAM;AAGpC,UAAM,OAAO,SAAS,IAAI,MAAM,EAAE,KAAI;AACtC,UAAM,QAAQ,SAAS,IAAI,OAAO,EAAE,KAAI;AACxC,UAAM,WAAW,SAAS,IAAI,UAAU,EAAE,KAAI;AAC9C,UAAM,kBAAkB,SAAS,IAAI,iBAAiB,EAAE,KAAI;AAC5D,UAAM,WAAW,SAAS,IAAI,UAAU;AAIxC,QAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC;AACnC,YAAM,IAAI,MACR,qGACV;AAGM,QAAI,aAAa;AACf,YAAM,IAAI,MACR,yEACV;AAGM,UAAM,MAAM;AACZ,UAAM,aAAa;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,OACI,WAAW,EAAE,SAAU,IAAG;AAIhC,UAAM,WAAW,MAAMA,kBAAmB,KAAK;AAAA,MAC7C;AAAA,MACA,UAAU;AAAA,MACV,eAAe;AAAA,MACf,mBAAmB;AAAA,IAC3B,CAAO;AAGD,UAAM,iBAAiB,UAAU,eAAe;AAGhD,eAAW,cAAc;AAAA,MACvB,gBAAgB;AAAA,IACxB,CAAO;AAAA,EACF,GACD,CAAE,GACF;AAAA,IACE,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,aAAa;AAAA,EACd,CACL;AACA;;"}